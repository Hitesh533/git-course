Hello World !!!
take input from user
add the values

submit data to the database


different git commands 
git --version // for checking git version
git status // for checking status of git
git init // for initialization it creates an empty git repository which it tracks everything
On branch master    but we want main not master 
git user.name"Your name" // for set your username globally
git user.email"Youremail@example.com" // for set your email globally
git add filename // for adding files in git
git log // for seeing all commits that people done in git
git commit -m "commit statement" // for commit any changes in git
git commit -a -m "commit statement" // for skip add file command and directly commit in git
git rm --cached filename // for removing file from git and then you delete that file from your working drectory also to permanently delete it
git add . // for adding all files/some changes done in files in git 
git diff // for seeing what unsaved changes left in the file
git diff --staged // display the changes between the staging area(index) and the last commit
git init -b main // for initializing the main name not master name


SOME GIT COMMANDS :->

 clone     Clone a repository into a new directory
   init      Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)      
   add       Add file contents to the index
   mv        Move or rename a file, a directory, or a symlink 
   restore   Restore working tree files
   rm        Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)  
   bisect    Use binary search to find the commit that introduced a bug
   diff      Show changes between commits, commit and working 
tree, etc
   grep      Print lines matching a pattern
   log       Show commit logs
   show      Show various types of objects
   status    Show the working tree status

grow, mark and tweak your common history
   branch    List, create, or delete branches
   commit    Record changes to the repository
   merge     Join two or more development histories together  
   rebase    Reapply commits on top of another base tip       
   reset     Reset current HEAD to the specified state        
   switch    Switch branches
   tag       Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch     Download objects and refs from another repository   pull      Fetch from and integrate with another repository 
or a local branch
   push      Update remote refs along with associated objects 